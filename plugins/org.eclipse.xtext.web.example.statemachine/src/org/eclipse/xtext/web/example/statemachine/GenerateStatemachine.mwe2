/*******************************************************************************
 * Copyright (c) 2015 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
module org.eclipse.xtext.web.example.statemachine.GenerateStatemachine

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var baseName = "org.eclipse.xtext.web.example.statemachine"

Workflow {
	
	component = XtextGenerator {
		configuration = StateMachineGeneratorModule {
			project = StandardProjectConfig {
				rootPath = rootPath
				baseName = baseName
				genericIde = {
					enabled = true
				}
				web = {
					enabled = true
					root = "../org.eclipse.xtext.web.example.jetty"
					src = "../org.eclipse.xtext.web.example.jetty/src/main/java"
					srcGen = "../org.eclipse.xtext.web.example.jetty/src/main/xtext-gen"
					assets = "../org.eclipse.xtext.web.example.jetty/src/main/webapp"
				}
				runtimeTest = {
					enabled = true
					root = "../org.eclipse.xtext.web"
					src = "../org.eclipse.xtext.web/src/test/java"
					srcGen = "../org.eclipse.xtext.web/src/test/xtext-gen"
				}
			}
			code = {
				encoding = "UTF-8"
				fileHeader = 
"/*******************************************************************************
 * Copyright (c) 2015 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/"
			}
		}
		cleaner = {
			exclude = "AbstractEntitiesWebModule.java"
		}
		language = {
			grammarUri = "classpath:/org/eclipse/xtext/web/example/statemachine/Statemachine.xtext"
			fileExtensions = "statemachine"
			
			// Java API to access grammar elements (required by several other fragments)
			fragment = grammarAccess.GrammarAccessFragment2 {}

			// generates Java API for the generated EPackages
			fragment = ecore.EMFGeneratorFragment2 {}

			fragment = serializer.SerializerFragment2 {
				generateStub = false
			}

			// a custom ResourceFactory for use with EMF
			fragment = resourceFactory.ResourceFactoryFragment2 {}

			// The antlr parser generator fragment.
			fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
			}

			// Xtend-based API for validation
			fragment = validation.ValidatorFragment2 {
			    composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}

			// scoping and exporting API
			fragment = scoping.ImportNamespacesScopingFragment2 {}
			fragment = exporting.QualifiedNamesFragment2 {}

			// generator API
			fragment = generator.GeneratorFragment2 {}

			// formatter API
			fragment = formatting.Formatter2Fragment2 {}
			
			// testing API
			fragment = junit.Junit4Fragment2 {
				generateStub = false
			}
			
			// JavaScript-based syntax highlighting
			fragment = web.WebIntegrationFragment {
				framework = "Orion"
				highlightingPath = "xtext/statemachine-syntax.js"
			}
			fragment = web.WebIntegrationFragment {
				framework = "Ace"
				highlightingPath = "xtext/ace-mode-statemachine.js"
			}
			fragment = web.WebIntegrationFragment {
				framework = "CodeMirror"
				highlightingPath = "xtext/cm-mode-statemachine.js"
			}
		}
	}
}
